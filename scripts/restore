#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

if [ "$turn_enabled" == "1" ] && [ "$(yunohost domain info $turn_domain --json | jq ".apps | length")" -gt 0 ]; then
  ynh_die "An app has been installed on $turn_domain. Please remove it or change its url and try again"
fi

#=================================================
# CONFIGURE FIREWALL
#=================================================
if ! yunohost firewall list | grep -q "\- 49152:65535"; then
  ynh_script_progression "Restoring firewall port range for RTC..."
  ynh_hide_warnings yunohost firewall allow UDP -4 49152:65535
fi

#=================================================
# RESTORE DEX
#=================================================
if ! yunohost app list | grep -q "id: $dex_app"; then
  ynh_script_progression "Installing Dex..."
  yunohost tools update
  if yunohost app list | grep -q "$dex_domain$dex_path"; then
    ynh_die "The domain provided for Dex is already used by another app. Please choose another one!"
  fi
  yunohost app install https://github.com/YunoHost-Apps/dex_ynh/tree/$dex_ynh_commit --force --args "domain=$dex_domain&path=$dex_path&oidc_name=$oidc_name&oidc_secret=$oidc_secret&oidc_callback=$oidc_callback"
fi

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression "Restoring the app main directory..."

ynh_restore "$install_dir"

chown -R "$app:www-data" "$install_dir"

#=================================================
# RESTORE THE POSTGRESQL DATABASE
#=================================================
ynh_script_progression "Restoring the Postgresql database..."

ynh_psql_db_shell < ./db.sql

#=================================================
# RESTORE REDIS AND REGENERATE CONFIG
#=================================================

ynh_script_progression --message="Restore redis and regenerate config..."

# Configure redis
redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --key=redis_db --value="$redis_db"

celery_redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --key=celery_redis_db --value=$celery_redis_db

ynh_config_add --template="env" --destination="$install_dir/.env"
chmod 400 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

ynh_config_add --template="livekit.yaml" --destination="$install_dir/livekit/livekit.yaml"
chmod 400 "$install_dir/livekit/livekit.yaml"
chown "$app:$app" "$install_dir/livekit/livekit.yaml"

#=================================================
# RESTORE SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Restoring system configurations related to $app..."

ynh_restore "/etc/nginx/conf.d/$domain.d/$app.conf"

ynh_restore "/etc/systemd/system/$app.service"
ynh_restore "/etc/systemd/system/$app-livekit.service"
systemctl enable "$app.service" --quiet
systemctl enable "$app-livekit.service" --quiet

yunohost service add "$app" --description="Simple and Secure Video Conferencing" --log="/var/log/$app/$app.log"
yunohost service add "$app-livekit" --description="Livekit for $app" --log="/var/log/$app/$app-livekit.log" --needs_exposed_ports "$port_tcp" "$port_livekit"

ynh_restore "/etc/logrotate.d/$app"

ynh_systemctl --action=restart --service=fail2ban

if [ "$turn_enabled" == "1" ]; then
  setup_certs_rights_for_turn
fi

#=================================================
# RESTORE VARIOUS FILES
#=================================================

ynh_restore "/var/log/$app/"

#=================================================
# RELOAD NGINX AND PHP-FPM OR THE APP SERVICE
#=================================================
ynh_script_progression "Reloading NGINX web server and $app's service..."

ynh_systemctl --service="$app" --action="start"
ynh_systemctl --service="$app-livekit" --action="start"

ynh_systemctl --service=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Restoration completed for $app"
