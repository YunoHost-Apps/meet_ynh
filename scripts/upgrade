#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop"

#=================================================
# INSTALL DEX APP FOR OAUTH2 / OIDC
#=================================================
if ! yunohost app list | grep -q "id: $dex_app"; then
  ynh_script_progression "Installing Dex..."
  yunohost tools update
  if yunohost app list | grep -q "$dex_domain$dex_path"; then
    ynh_die "The domain provided for Dex is already used by another app. Please choose another one!"
  fi
  install_dex
fi

#=================================================
# INSTALL NODEJS
#=================================================

ynh_script_progression "Installing dependencies..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir" --full_replace
ynh_setup_source --dest_dir="$install_dir/livekit" --source_id="livekit" # --full-replace

ynh_exec_as_app mkdir -p "$install_dir/_build/venv"
ynh_exec_as_app mkdir -p "$install_dir/_build/frontend"
ynh_exec_as_app mkdir -p "$install_dir/_build/data/static"

pushd "$install_dir/_build/venv"
  ynh_exec_as_app python -m venv .
  ynh_exec_as_app ./bin/pip install ../../src/backend
popd

pushd "$install_dir/src/backend"
  # Collect the static resources
  ynh_exec_as_app MEET_DATA_DIR="$install_dir/_build/data/static" DJANGO_CONFIGURATION=Build DJANGO_JWT_PRIVATE_SIGNING_KEY=Dummy \
    STATIC_ROOT="$install_dir/src/backend" \
    "$install_dir/_build/venv/bin/python" manage.py collectstatic --noinput
  rdfind -makesymlinks true -followsymlinks true -makeresultsfile false "$install_dir/_build/data/static"
  # Setup the database
  # FIXME: cleanup the env variables.
  ynh_exec_as_app \
    MEET_DATA_DIR="$install_dir/_build/data/static" DJANGO_CONFIGURATION=Build DJANGO_JWT_PRIVATE_SIGNING_KEY=Dummy \
    STATIC_ROOT="$install_dir/src/backend" \
    DB_NAME=$db_name DB_USER=$db_name DB_PASSWORD=$db_pwd \
    "$install_dir/_build/venv/bin/python" manage.py migrate

popd

pushd "$install_dir/src/frontend"
  ynh_hide_warnings ynh_exec_as_app npm ci
  ynh_hide_warnings ynh_exec_as_app NODE_ENV=production VITE_API_BASE_URL="https://${domain}" npm run build -- --outDir="$install_dir/_build/frontend" --emptyOutDir
popd


chown -R "$app:www-data" "$install_dir"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating $app's configuration files..."

ynh_config_add --template="env" --destination="$install_dir/.env"
chmod 400 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

ynh_config_add --template="livekit.yaml" --destination="$install_dir/livekit/livekit.yaml"
chmod 400 "$install_dir/livekit/livekit.yaml"
chown "$app:$app" "$install_dir/livekit/livekit.yaml"

ynh_config_add --template="meet.py" --destination="$install_dir/meet-conf.py"
chmod 400 "$install_dir/meet-conf.py"
chown "$app:$app" "$install_dir/meet-conf.py"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd
ynh_config_add_systemd --service="${app}-livekit" --template="systemd-livekit.service"

yunohost service add "$app" --description="Simple, high-performance videoconferencing solution" --log="/var/log/$app/$app.log"
yunohost service add "$app-livekit" --description="Livekit for $app" --log="/var/log/$app/$app-livekit.log" --needs_exposed_ports "$port_tcp" "$port_livekit"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start"
ynh_systemctl --service="${app}-livekit" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
