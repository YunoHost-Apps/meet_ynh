#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "visio"
name = "Visio"
description.en = "Open source alternative to Google Meet and Zoom powered by LiveKit: HD video calls, screen sharing, and chat features."
description.fr = "Alternative open source à Google Meet et Zoom propulsée par LiveKit : appels vidéo HD, partage d'écran et fonctionnalités de chat."

version = "1.0~ynh1"

maintainers = ["fflorent", "rouja"]

[upstream]
license = "AGPL-3.0-or-later"
website = "https://example.com"
demo = "https://demo.example.com"
admindoc = "https://yunohost.org/packaging_apps"
userdoc = "https://yunohost.org/apps"
code = "https://some.forge.com/example/example"

[integration]
yunohost = ">= 11.2.30"
helpers_version = "2.1"
architectures = ["amd64", "arm64", "armv7"]
multi_instance = true

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "sso" key: the "ldap" key corresponds to wether or not a user *can* login on the app using
# its YunoHost credentials.
ldap = "?"

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "ldap" key: the "sso" key corresponds to wether or not a user is *automatically logged-in*
# on the app when logged-in on the YunoHost portal.
sso = "?"

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = ["fr-fr", "en-us"]
    default = "fr-fr"

    [install.dex_domain]
    ask.en = "Domain for authentication. It can't be the same domain as above. Dex app will be installed and used for the authentication mechanism."
    ask.fr = "Domaine pour l'authentification. Il ne peut pas s'agir du même domaine que ci-dessus. L'application Dex sera installée et utilisée pour le mécanisme d'authentification."
    type = "domain"

    [install.dex_path]
    ask.en = "Path for authentication URL. Please don't use 'auth' as it will break NGINX configuration."
    ask.fr = "Chemin de l'URL d'authentification. Veuillez ne pas utiliser 'auth' car cela casserait la configuration NGINX."
    type = "path"
    default = "/"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

    [resources.sources.main]
    url = "https://github.com/suitenumerique/meet/archive/refs/tags/v0.1.18.tar.gz"
    sha256 = "5fe1b0773556f221623ad5933f5ce42fc117715fe0b7ad630db1f9e72badc601"
    autoupdate.strategy = "latest_github_tag"

    [resources.sources.livekit]
    amd64.url = "https://github.com/livekit/livekit/releases/download/v1.8.0/livekit_1.8.0_linux_amd64.tar.gz"
    amd64.sha256 = "7ccd6c865a8c81909a1be63639ae0e6e80dff5e0d12cd1fffff3dadb53167cca"
    in_subdir=false
    autoupdate.strategy = "latest_github_release"
    # arm64.sha256 = "17951c82888ba40fb2c12d30deeb24ecf8ab21c9098ed4c6ad11f76e8d16f2eb"
    # armv7.sha256 = "73b6b1610bc5ce415811fb8986b6018ca0d234bc4714354c551c9ad56594eb02"

    [resources.system_user]

    [resources.install_dir]

    [resources.permissions]
    main.url = "/"

    [resources.ports]
    backend.default = 8071
    # Ports for livekit
    # Documentation here: https://docs.livekit.io/home/self-hosting/ports-firewall/
    livekit.default = 7880 # Handled by nginx with SSL termination, on port 443
    tcp.default = 7881
    tcp.exposed = "TCP"

    [resources.apt]
    packages = "redis, python3, python3-setuptools, python3-pip, postgresql, rdfind, celery"

    [resources.database]
    # This will automatically provision/deprovison a MySQL DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "postgresql"
